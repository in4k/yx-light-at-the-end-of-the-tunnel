/* File generated with Shader Minifier 1.1.6
 * http://www.ctrl-alt-test.fr
 */
#ifndef FRAG_DRAW_H_
# define FRAG_DRAW_H_

const char *draw_frag =
 "#version 130\n"
 "#define iResolution gl_TexCoord[0]\n"
 "#define iTime gl_TexCoord[0].z\n"
 "#define pi acos(-1.)\n"
 "float v(vec3 v,vec3 y)"
 "{"
   "return v=abs(v)-y,max(max(v.x,v.y),v.z);"
 "}"
 "vec2 v(const float v)"
 "{"
   "return fract(sin(vec2(v,v+1.))*vec2(43758.5));"
 "}"
 "bool y;"
 "float n(vec3 i)"
 "{"
   "vec3 n=vec3(0,0,18.9),x=vec3(2,2,20);"
   "float m=-min(v(i+n,x),v(i+n.zyx,x.zyx)),s=v(i+vec3(3,0,0),vec3(1,2,1));"
   "y=s<m;"
   "return min(s,m);"
 "}"
 "vec2 i;"
 "vec3 s(vec3 v)"
 "{"
   "float y=2*pi*i.x,x=acos(1-2*i.y);"
   "vec3 s=normalize(vec3(sin(x)*cos(y),sin(x)*sin(y),cos(x)));"
   "return s*sign(dot(s,v));"
 "}"
 "vec3 n(vec3 x,vec3 f)"
 "{"
   "vec3 m=vec3(1);"
   "for(int g=0;g++<10;)"
     "{"
       "float a=1;"
       "for(int e=0;e++<100&&abs(a)>.001;)"
         "a=n(x),x+=f*a;"
       "if(abs(a)<.001)"
         "{"
           "if(y)"
             "return m*vec3(ivec3(7,25,31)>>int(abs(x.y*2.5))&1);"
           "vec3 e=vec3(.001,0,0),c=normalize(vec3(n(x+e.xyy)-n(x-e.xyy),n(x+e.yxy)-n(x-e.yxy),n(x+e.yyx)-n(x-e.yyx)));"
           "x+=c*.01;"
           "f=s(c);"
           "m*=dot(f,c);"
         "}"
       "i=v(i.y+i.x);"
     "}"
   "return vec3(0);"
 "}"
 "void main()"
 "{"
   "vec2 x=gl_FragCoord.xy/iResolution.xy-.5;"
   "float y=iTime+(x.x+iResolution.x*x.y)*1.51269;"
   "i=v(24.4317+iTime+y);"
   "x+=(i-.5)/iResolution.xy;"
   "x.x*=iResolution.x/iResolution.y;"
   "gl_FragColor.xyz=n(vec3(0,0,-12),normalize(vec3(x,1)));"
 "}";

#endif // FRAG_DRAW_H_
